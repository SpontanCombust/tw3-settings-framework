name: regenerate-samples

on:
  push:
    branches: '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  regenerate-samples:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Build with Cargo
        run: cargo build --release --target=x86_64-unknown-linux-gnu
        working-directory: settings-parser
      - name: Parse doc example
        run: >
          cargo run --release --  
          -f="../doc/mod-menu.xml"
          -o="../doc/mod-menu.ws"
          -p="MOD" -p="mod_"
          -m="MyModSettings"
          -v="1.23"
        working-directory: settings-parser
      - name: Parse DifficultyMod sample
        run: >
          cargo run --release --  
          -f="../samples/DifficultyMod/bin/config/r4game/user_config_matrix/pc/modSettingsFrameworkSampleDifficultyMod.xml"
          -o="../samples/DifficultyMod/modSettingsFrameworkSampleDifficultyMod/content/scripts/local/difficulty_mod_base.ws"
          -m="ModDifficultySettingsBase"
          -p="DM"
          --default-preset-keyword="DEFAULT"
          -v="1.1"
        working-directory: settings-parser
      - name: CLI specification
        run: |
          echo  '```' > "../doc/cli_specification.md"
          cargo run --release -- -h >> "../doc/cli_specification.md"
          echo  '```' >> "../doc/cli_specification.md"
        working-directory: settings-parser
      - name: Check for changes in the project
        id: get_changes
        run: echo "changed=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT
      - name: Committing changes if there are any
        if: steps.get_changes.outputs.changed != 0
        uses: EndBug/add-and-commit@v7
        with:
          message: "Update samples"
          default_author: github_actions
    